workflows:
  version: 2
  build-deploy:
    jobs:
      - build
    #   - deploy:
    #       requires:
    #         - build
    #       filters:
    #         branches:
    #           only: master
version: 2
jobs:
  build:
    # working_directory: ~/
    docker:
      - image: circleci/node:10-browsers
      - image: circleci/ruby:2.6.5
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0      
      - restore_cache:
          keys:
            - my-project-{{ checksum "./planning/capybara/Gemfile.lock" }}      
      - restore_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: 
          command: npm install
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat ./planning/capybara/Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler          
      - run:           
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - save_cache:
          key: my-project-{{ checksum "./planning/capybara/Gemfile.lock" }}
          paths:
            - vendor/bundle            
      # - run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - run:
          command: npm run test -- --no-watch --no-progress 
      # - run:
      #     command: npm run e2e -- --protractor-config=e2e/protractor.conf.js 
      - run:
          command: rspec .\\planning\\capybara\\nav-e2e.spec.rb
  deploy:
    docker:
      - image: circleci/buildpack-deps:xenial
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
    #   - deploy:
    #       requires:
    #         - build
    #       filters:
    #         branches:
    #           only: master
version: 2
# orbs:
#   ruby: circleci/ruby@0.2.1
jobs:
  build:
    # working_directory: ~/
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLER_VERSION: 1.17.2    
      - image: circleci/node:12.14-browsers
    steps:
      - checkout  
      # - run:
      #     command: |
      #       # Determine if sudo is neccessary
      #       SUDO=""
      #       if [[ $EUID -ne 0 ]]; then
      #         SUDO=sudo
      #       fi

      #       $SUDO apt-get update && $SUDO apt-get install -y ruby-full
      #     name: Prep for RVM      
      # - run:
      #     command: |
      #       # Fix for retrieving GPG over IPv6 issue
      #       mkdir ~/.gnupg && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
      #       curl -sSL https://rvm.io/mpapis.asc | gpg --import -
      #       curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -

      #       curl -sSL "https://get.rvm.io" | bash -s stable
      #       adduser $(whoami) rvm
      #       source /etc/profile.d/rvm.sh
      #       rvm install << parameters.version >>
      #       rvm use << parameters.version >> default

      #       echo 'source /etc/profile.d/rvm.sh' >> $BASH_ENV
      #     name: Install Ruby v<< parameters.version >> via RVM          
      - restore_cache:
          keys:
            - my-project-{{ checksum "./planning/capybara/Gemfile.lock" }}      
      - restore_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: 
          command: npm install
      - run:
          name: Configure Bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            echo 'export BUNDLER_VERSION=$(cat ./planning/capybara/Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV      
            sudo gem install bundler    
      - run:           
          command: bundler check --path vendor/bundle || bundler install --deployment
      - save_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - save_cache:
          key: my-project-{{ checksum "./planning/capybara/Gemfile.lock" }}
          paths:
            - vendor/bundle            
      # - run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - run:
          command: npm run test -- --no-watch --no-progress 
      # - run:
      #     command: npm run e2e -- --protractor-config=e2e/protractor.conf.js 
      - run:
          command: rspec .\\planning\\capybara\\nav-e2e.spec.rb
  deploy:
    docker:
      - image: circleci/buildpack-deps:xenial
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master